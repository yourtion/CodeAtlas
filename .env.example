# CodeAtlas Configuration Example
# Copy this file to .env and customize for your environment

# ============================================================================
# Database Configuration
# ============================================================================

# PostgreSQL connection settings
DB_HOST=localhost
DB_PORT=5432
DB_USER=codeatlas
DB_PASSWORD=codeatlas
DB_NAME=codeatlas

# SSL mode: disable, require, verify-ca, verify-full
DB_SSLMODE=disable

# Connection pool settings
DB_MAX_OPEN_CONNS=25
DB_MAX_IDLE_CONNS=5
DB_CONN_MAX_LIFETIME=5m
DB_CONN_MAX_IDLE_TIME=5m

# ============================================================================
# API Server Configuration
# ============================================================================

# Server bind address and port
API_HOST=0.0.0.0
API_PORT=8080

# Authentication (set to true to enable)
ENABLE_AUTH=false
# Comma-separated list of valid auth tokens (required if ENABLE_AUTH=true)
# AUTH_TOKENS=token1,token2,token3

# CORS origins (comma-separated, use * for all)
CORS_ORIGINS=*

# Request timeout
API_TIMEOUT=30s

# ============================================================================
# Indexer Configuration
# ============================================================================

# Batch processing settings
INDEXER_BATCH_SIZE=100
INDEXER_WORKER_COUNT=4

# Feature flags
INDEXER_SKIP_VECTORS=false
INDEXER_INCREMENTAL=false
INDEXER_USE_TRANSACTIONS=true

# Apache AGE graph name
INDEXER_GRAPH_NAME=code_graph

# Override embedding model (optional)
# INDEXER_EMBEDDING_MODEL=text-embedding-3-small

# ============================================================================
# Embedder Configuration
# ============================================================================

# Backend type: openai or local
EMBEDDING_BACKEND=openai

# API endpoint (use OpenAI API or local model server)
EMBEDDING_API_ENDPOINT=http://localhost:1234/v1/embeddings

# API key (required for OpenAI, optional for local)
# EMBEDDING_API_KEY=sk-...

# Model name and dimensions
# Common models:
#   - text-embedding-qwen3-embedding-0.6b (768 dimensions)
#   - nomic-embed-text (768 dimensions)
#   - text-embedding-3-small (1536 dimensions)
#   - text-embedding-3-large (3072 dimensions)
EMBEDDING_MODEL=text-embedding-qwen3-embedding-0.6b
EMBEDDING_DIMENSIONS=1024

# Batch processing and rate limiting
EMBEDDING_BATCH_SIZE=50
EMBEDDING_MAX_REQUESTS_PER_SECOND=10

# Retry configuration
EMBEDDING_MAX_RETRIES=3
EMBEDDING_BASE_RETRY_DELAY=100ms
EMBEDDING_MAX_RETRY_DELAY=5s
EMBEDDING_TIMEOUT=30s

# ============================================================================
# Environment-Specific Examples
# ============================================================================

# Development (fast, no embeddings):
# INDEXER_SKIP_VECTORS=true
# INDEXER_BATCH_SIZE=50

# Production (with OpenAI):
# EMBEDDING_BACKEND=openai
# EMBEDDING_API_ENDPOINT=https://api.openai.com/v1/embeddings
# EMBEDDING_API_KEY=sk-...
# EMBEDDING_MODEL=text-embedding-3-small
# EMBEDDING_DIMENSIONS=1536
# INDEXER_BATCH_SIZE=200
# INDEXER_WORKER_COUNT=8

# High-throughput indexing:
# DB_MAX_OPEN_CONNS=100
# INDEXER_BATCH_SIZE=500
# INDEXER_WORKER_COUNT=16
# INDEXER_SKIP_VECTORS=true

# Resource-constrained:
# DB_MAX_OPEN_CONNS=5
# INDEXER_BATCH_SIZE=25
# INDEXER_WORKER_COUNT=2
# INDEXER_SKIP_VECTORS=true
